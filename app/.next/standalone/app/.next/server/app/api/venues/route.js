"use strict";(()=>{var e={};e.id=3541,e.ids=[3541],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},6878:(e,n,t)=>{t.r(n),t.d(n,{originalPathname:()=>w,patchFetch:()=>h,requestAsyncStorage:()=>f,routeModule:()=>v,serverHooks:()=>z,staticGenerationAsyncStorage:()=>y});var i={};t.r(i),t.d(i,{GET:()=>g,POST:()=>b,dynamic:()=>p});var r=t(49303),s=t(88716),o=t(60670),a=t(87070),u=t(9487),l=t(90455),c=t(30971),d=t(86287),m=t(53524);let p="force-dynamic";async function g(e){try{let e;let n=await (0,l.mk)();e=n.role===m.UserRole.SUPER_ADMIN?await u._.venue.findMany({include:{owner:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},subscription:!0,_count:{select:{bookings:!0,tables:!0}}},orderBy:{createdAt:"desc"}}):await u._.venue.findMany({where:{ownerId:n.id},include:{subscription:!0,_count:{select:{bookings:!0,tables:!0}}},orderBy:{createdAt:"desc"}});let t=Array.isArray(e)?e:[];return a.NextResponse.json({success:!0,venues:t})}catch(e){if(console.error("Get venues error:",e),"Authentication required"===e.message)return a.NextResponse.json({error:"Authentication required",venues:[]},{status:401});if("Account is inactive"===e.message)return a.NextResponse.json({error:"Account is inactive",venues:[]},{status:403});if("Insufficient permissions"===e.message)return a.NextResponse.json({error:"Insufficient permissions",venues:[]},{status:403});return a.NextResponse.json({error:"Failed to fetch venues",venues:[]},{status:500})}}async function b(e){try{let n;let t=await (0,l.mk)([m.UserRole.VENUE_OWNER,m.UserRole.SUPER_ADMIN]);if(t.role!==m.UserRole.SUPER_ADMIN){let e=await (0,d.EG)(t.id);if(!e.canCreateVenue)return a.NextResponse.json({error:"Venue limit reached",message:e.message,plan:e.plan,venuesUsed:e.venuesUsed,venuesLimit:e.venuesLimit},{status:403})}try{n=await e.json()}catch(e){return a.NextResponse.json({error:"Invalid JSON format"},{status:400})}let i=c.Tu.parse(n),r=i.name.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/(^-|-$)/g,"");if(await u._.venue.findUnique({where:{slug:r}}))return a.NextResponse.json({error:"A venue with this name already exists"},{status:409});let s=await u._.venue.create({data:{...i,slug:r,ownerId:t.id,subscription:{create:{plan:m.SubscriptionPlan.FREE,status:m.SubscriptionStatus.ACTIVE,currentPeriodStart:new Date,currentPeriodEnd:new Date(Date.now()+2592e6),bookingsLimit:50}}},include:{subscription:!0}});return a.NextResponse.json({success:!0,venue:s})}catch(e){if(console.error("Create venue error:",e),"Authentication required"===e.message)return a.NextResponse.json({error:"Authentication required"},{status:401});if("Account is inactive"===e.message)return a.NextResponse.json({error:"Account is inactive"},{status:403});if("Insufficient permissions"===e.message)return a.NextResponse.json({error:"Insufficient permissions"},{status:403});if("ZodError"===e.name)return a.NextResponse.json({error:"Invalid request data",details:e.errors},{status:400});if("P2002"===e.code)return a.NextResponse.json({error:"A venue with this information already exists"},{status:409});return a.NextResponse.json({error:"Failed to create venue"},{status:500})}}let v=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/venues/route",pathname:"/api/venues",filename:"route",bundlePath:"app/api/venues/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/venues/route.ts",nextConfigOutput:"standalone",userland:i}),{requestAsyncStorage:f,staticGenerationAsyncStorage:y,serverHooks:z}=v,w="/api/venues/route";function h(){return(0,o.patchFetch)({serverHooks:z,staticGenerationAsyncStorage:y})}},90455:(e,n,t)=>{t.d(n,{Gg:()=>p,Gv:()=>d,Sk:()=>b,c_:()=>c,ed:()=>m,mk:()=>g});var i=t(42023),r=t.n(i),s=t(41482),o=t.n(s),a=t(71615),u=t(9487);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function c(e){return r().hash(e,12)}async function d(e,n){return r().compare(e,n)}async function m(e){var n;let t=(n={userId:e},o().sign(n,l,{expiresIn:"7d"})),i=new Date;return i.setDate(i.getDate()+7),await u._.userSession.create({data:{userId:e,token:t,expiresAt:i}}),t}async function p(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,a.cookies)(),n=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",n?`Token found (${n.substring(0,20)}...)`:"No token found"),!n)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let t=await u._.userSession.findUnique({where:{token:n},include:{user:!0}});if(!t)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),t.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u._.userSession.delete({where:{id:t.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",t.user.email),{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function g(e){let n=await p();if(!n)throw Error("Authentication required");if(!n.isActive)throw Error("Account is inactive");if(e&&!e.includes(n.role))throw Error("Insufficient permissions");return n}async function b(e){try{let n=e.cookies.get("auth-token")?.value;if(!n)return null;let t=await u._.userSession.findUnique({where:{token:n},include:{user:!0}});if(!t)return null;if(t.expiresAt<new Date)return await u._.userSession.delete({where:{id:t.id}}),null;if(!t.user.isActive)return null;return{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,n,t)=>{t.d(n,{_:()=>r});var i=t(53524);let r=globalThis.prisma??new i.PrismaClient},86287:(e,n,t)=>{t.d(n,{EG:()=>l,GC:()=>a,XA:()=>s,ol:()=>c,sN:()=>o});var i=t(9487),r=t(53524);async function s(e){let n=await i._.subscription.findUnique({where:{venueId:e}});return n?{canCreateBooking:n.plan===r.SubscriptionPlan.PAID||n.plan===r.SubscriptionPlan.PREMIUM||null!==n.bookingsLimit&&n.bookingsUsed<n.bookingsLimit,bookingsUsed:n.bookingsUsed,bookingsLimit:n.bookingsLimit,plan:n.plan}:(await i._.subscription.create({data:{venueId:e,plan:r.SubscriptionPlan.FREE,status:r.SubscriptionStatus.ACTIVE,currentPeriodStart:new Date,currentPeriodEnd:new Date(Date.now()+2592e6),bookingsLimit:50}}),{canCreateBooking:!0,bookingsUsed:0,bookingsLimit:50,plan:r.SubscriptionPlan.FREE})}async function o(e){let n=await i._.subscription.findUnique({where:{venueId:e}}),t=n?.plan||r.SubscriptionPlan.FREE;return{canUploadLogo:!0,canUploadHeader:!0,canUploadGallery:t===r.SubscriptionPlan.PREMIUM||t===r.SubscriptionPlan.PAID,maxGalleryImages:t===r.SubscriptionPlan.PREMIUM||t===r.SubscriptionPlan.PAID?20:0,plan:t}}async function a(e){await i._.subscription.update({where:{venueId:e},data:{bookingsUsed:{increment:1}}})}let u={FREE:{venues:1,bookingsPerMonth:50,galleryImages:0,analytics:!0,widgets:!0,customBranding:!1,prioritySupport:!1},PAID:{venues:5,bookingsPerMonth:null,galleryImages:20,analytics:!0,widgets:!0,customBranding:!0,prioritySupport:!1},PREMIUM:{venues:null,bookingsPerMonth:null,galleryImages:20,analytics:!0,widgets:!0,customBranding:!0,prioritySupport:!0}};async function l(e){let n;let t=await i._.venue.count({where:{ownerId:e}}),s=await i._.venue.findMany({where:{ownerId:e},include:{subscription:!0}}),o=r.SubscriptionPlan.FREE;for(let e of s)if(e.subscription){if(e.subscription.plan===r.SubscriptionPlan.PREMIUM){o=r.SubscriptionPlan.PREMIUM;break}e.subscription.plan===r.SubscriptionPlan.PAID&&o===r.SubscriptionPlan.FREE&&(o=r.SubscriptionPlan.PAID)}let a=u[o],l=null===a.venues||t<a.venues;return l||(n=`You've reached the venue limit for your ${o} plan (${a.venues} venue${1===a.venues?"":"s"}). Upgrade to create more venues.`),{canCreateVenue:l,venuesUsed:t,venuesLimit:a.venues,plan:o,message:n}}async function c(e){let n=await l(e),t=u[n.plan];return{plan:n.plan,venues:{used:n.venuesUsed,limit:n.venuesLimit},features:{bookingsPerMonth:t.bookingsPerMonth,galleryImages:t.galleryImages,analytics:t.analytics,widgets:t.widgets,customBranding:t.customBranding,prioritySupport:t.prioritySupport}}}},30971:(e,n,t)=>{t.d(n,{Tu:()=>a,WV:()=>l,Yy:()=>u,dm:()=>s,gY:()=>o,i6:()=>c,sY:()=>m,tw:()=>p});var i=t(7410),r=t(53524);let s=i.z.object({email:i.z.string().email("Invalid email address"),password:i.z.string().min(6,"Password must be at least 6 characters")}),o=i.z.object({email:i.z.string().email("Invalid email address"),password:i.z.string().min(6,"Password must be at least 6 characters"),firstName:i.z.string().min(1,"First name is required"),lastName:i.z.string().min(1,"Last name is required"),phone:i.z.string().optional()}),a=i.z.object({name:i.z.string().min(1,"Venue name is required"),description:i.z.string().optional(),address:i.z.string().min(1,"Address is required"),city:i.z.string().min(1,"City is required"),postcode:i.z.string().min(1,"Postcode is required"),phone:i.z.string().min(1,"Phone is required"),email:i.z.string().email("Invalid email address"),website:i.z.string().url().optional().or(i.z.literal("")),cuisine:i.z.string().optional(),venueType:i.z.nativeEnum(r.VenueType),capacity:i.z.number().min(1,"Capacity must be at least 1")}),u=i.z.object({venueId:i.z.string().min(1,"Venue is required"),serviceType:i.z.nativeEnum(r.ServiceType),date:i.z.string().min(1,"Date is required"),time:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),partySize:i.z.number().min(1,"Party size must be at least 1"),customerName:i.z.string().min(1,"Customer name is required"),customerEmail:i.z.string().email("Invalid email address"),customerPhone:i.z.string().min(1,"Phone number is required"),specialRequests:i.z.string().optional(),tableId:i.z.string().optional()}),l=i.z.object({name:i.z.string().min(1,"Table name is required"),capacity:i.z.number().min(1,"Capacity must be at least 1"),description:i.z.string().optional()});i.z.object({name:i.z.string().min(1,"Event name is required"),description:i.z.string().optional(),date:i.z.string().min(1,"Date is required"),startTime:i.z.string().min(1,"Start time is required"),endTime:i.z.string().min(1,"End time is required"),capacity:i.z.number().min(1,"Capacity must be at least 1"),price:i.z.number().min(0,"Price must be positive").optional()});let c=i.z.object({dayOfWeek:i.z.number().min(0).max(6),openTime:i.z.string().min(1,"Open time is required"),closeTime:i.z.string().min(1,"Close time is required"),isOpen:i.z.boolean()}),d=i.z.object({dayOfWeek:i.z.number().min(0).max(6),openTime:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),closeTime:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),name:i.z.string().optional(),isActive:i.z.boolean().default(!0)}),m=i.z.object({openingHours:i.z.array(d)}),p=i.z.object({name:i.z.string().min(1,"Widget name is required"),settings:i.z.object({theme:i.z.string().optional(),primaryColor:i.z.string().optional(),showLogo:i.z.boolean().optional(),allowedServices:i.z.array(i.z.nativeEnum(r.ServiceType)).optional()}).optional()})}};var n=require("../../../webpack-runtime.js");n.C(e);var t=e=>n(n.s=e),i=n.X(0,[9276,5972,3954,7410],()=>t(6878));module.exports=i})();