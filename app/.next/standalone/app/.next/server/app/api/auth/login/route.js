"use strict";(()=>{var e={};e.id=8873,e.ids=[8873],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},67523:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>z,patchFetch:()=>I,requestAsyncStorage:()=>D,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{POST:()=>d,dynamic:()=>m});var i=t(49303),n=t(88716),o=t(60670),a=t(87070),u=t(9487),l=t(90455),c=t(30971);let m="force-dynamic";async function d(e){console.log("\uD83D\uDD35 [LOGIN-API] Login attempt started");try{let r,t,s,i,n;try{r=await e.json(),console.log("\uD83D\uDD35 [LOGIN-API] Request body parsed successfully")}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Failed to parse request body:",e),a.NextResponse.json({error:"Invalid JSON in request body"},{status:400})}try{t=c.dm.parse(r),console.log("\uD83D\uDD35 [LOGIN-API] Input validation successful for email:",t.email)}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Input validation failed:",e),a.NextResponse.json({error:"Invalid email or password format"},{status:400})}let{email:o,password:m}=t;try{s=await u._.user.findUnique({where:{email:o.toLowerCase()}}),console.log("\uD83D\uDD35 [LOGIN-API] Database query completed, user found:",!!s)}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Database error during user lookup:",e),a.NextResponse.json({error:"Database connection error"},{status:500})}if(!s)return console.log("\uD83D\uDD34 [LOGIN-API] User not found for email:",o),a.NextResponse.json({error:"Invalid email or password"},{status:401});try{i=await (0,l.Gv)(m,s.password),console.log("\uD83D\uDD35 [LOGIN-API] Password verification completed:",i)}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Password verification error:",e),a.NextResponse.json({error:"Authentication error"},{status:500})}if(!i)return console.log("\uD83D\uDD34 [LOGIN-API] Invalid password for user:",o),a.NextResponse.json({error:"Invalid email or password"},{status:401});if(!s.isActive)return console.log("\uD83D\uDD34 [LOGIN-API] Inactive user attempted login:",o),a.NextResponse.json({error:"Account is inactive"},{status:401});try{n=await (0,l.ed)(s.id),console.log("\uD83D\uDD35 [LOGIN-API] Session created successfully")}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Session creation error:",e),a.NextResponse.json({error:"Failed to create session"},{status:500})}let d={id:s.id,email:s.email,firstName:s.firstName,lastName:s.lastName,role:s.role};console.log("\uD83D\uDFE2 [LOGIN-API] Login successful for user:",o);let p=a.NextResponse.json({user:d});try{p.cookies.set("auth-token",n,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800,path:"/"}),console.log("\uD83D\uDD35 [LOGIN-API] Auth cookie set successfully")}catch(e){console.error("\uD83D\uDD34 [LOGIN-API] Cookie setting error:",e)}return p}catch(e){return console.error("\uD83D\uDD34 [LOGIN-API] Unexpected error during login:",e),console.error("\uD83D\uDD34 [LOGIN-API] Error stack:",e instanceof Error?e.stack:"No stack trace"),a.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/auth/login/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:D,staticGenerationAsyncStorage:g,serverHooks:f}=p,z="/api/auth/login/route";function I(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}},90455:(e,r,t)=>{t.d(r,{Gg:()=>p,Gv:()=>m,Sk:()=>g,c_:()=>c,ed:()=>d,mk:()=>D});var s=t(42023),i=t.n(s),n=t(41482),o=t.n(n),a=t(71615),u=t(9487);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function c(e){return i().hash(e,12)}async function m(e,r){return i().compare(e,r)}async function d(e){var r;let t=(r={userId:e},o().sign(r,l,{expiresIn:"7d"})),s=new Date;return s.setDate(s.getDate()+7),await u._.userSession.create({data:{userId:e,token:t,expiresAt:s}}),t}async function p(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,a.cookies)(),r=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",r?`Token found (${r.substring(0,20)}...)`:"No token found"),!r)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let t=await u._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),t.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u._.userSession.delete({where:{id:t.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",t.user.email),{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function D(e){let r=await p();if(!r)throw Error("Authentication required");if(!r.isActive)throw Error("Account is inactive");if(e&&!e.includes(r.role))throw Error("Insufficient permissions");return r}async function g(e){try{let r=e.cookies.get("auth-token")?.value;if(!r)return null;let t=await u._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return null;if(t.expiresAt<new Date)return await u._.userSession.delete({where:{id:t.id}}),null;if(!t.user.isActive)return null;return{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,r,t)=>{t.d(r,{_:()=>i});var s=t(53524);let i=globalThis.prisma??new s.PrismaClient},30971:(e,r,t)=>{t.d(r,{Tu:()=>a,WV:()=>l,Yy:()=>u,dm:()=>n,gY:()=>o,i6:()=>c,sY:()=>d,tw:()=>p});var s=t(7410),i=t(53524);let n=s.z.object({email:s.z.string().email("Invalid email address"),password:s.z.string().min(6,"Password must be at least 6 characters")}),o=s.z.object({email:s.z.string().email("Invalid email address"),password:s.z.string().min(6,"Password must be at least 6 characters"),firstName:s.z.string().min(1,"First name is required"),lastName:s.z.string().min(1,"Last name is required"),phone:s.z.string().optional()}),a=s.z.object({name:s.z.string().min(1,"Venue name is required"),description:s.z.string().optional(),address:s.z.string().min(1,"Address is required"),city:s.z.string().min(1,"City is required"),postcode:s.z.string().min(1,"Postcode is required"),phone:s.z.string().min(1,"Phone is required"),email:s.z.string().email("Invalid email address"),website:s.z.string().url().optional().or(s.z.literal("")),cuisine:s.z.string().optional(),venueType:s.z.nativeEnum(i.VenueType),capacity:s.z.number().min(1,"Capacity must be at least 1")}),u=s.z.object({venueId:s.z.string().min(1,"Venue is required"),serviceType:s.z.nativeEnum(i.ServiceType),date:s.z.string().min(1,"Date is required"),time:s.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),partySize:s.z.number().min(1,"Party size must be at least 1"),customerName:s.z.string().min(1,"Customer name is required"),customerEmail:s.z.string().email("Invalid email address"),customerPhone:s.z.string().min(1,"Phone number is required"),specialRequests:s.z.string().optional(),tableId:s.z.string().optional()}),l=s.z.object({name:s.z.string().min(1,"Table name is required"),capacity:s.z.number().min(1,"Capacity must be at least 1"),description:s.z.string().optional()});s.z.object({name:s.z.string().min(1,"Event name is required"),description:s.z.string().optional(),date:s.z.string().min(1,"Date is required"),startTime:s.z.string().min(1,"Start time is required"),endTime:s.z.string().min(1,"End time is required"),capacity:s.z.number().min(1,"Capacity must be at least 1"),price:s.z.number().min(0,"Price must be positive").optional()});let c=s.z.object({dayOfWeek:s.z.number().min(0).max(6),openTime:s.z.string().min(1,"Open time is required"),closeTime:s.z.string().min(1,"Close time is required"),isOpen:s.z.boolean()}),m=s.z.object({dayOfWeek:s.z.number().min(0).max(6),openTime:s.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),closeTime:s.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),name:s.z.string().optional(),isActive:s.z.boolean().default(!0)}),d=s.z.object({openingHours:s.z.array(m)}),p=s.z.object({name:s.z.string().min(1,"Widget name is required"),settings:s.z.object({theme:s.z.string().optional(),primaryColor:s.z.string().optional(),showLogo:s.z.boolean().optional(),allowedServices:s.z.array(s.z.nativeEnum(i.ServiceType)).optional()}).optional()})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972,3954,7410],()=>t(67523));module.exports=s})();