"use strict";(()=>{var e={};e.id=4929,e.ids=[4929],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},89847:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>b,requestAsyncStorage:()=>D,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{POST:()=>f,dynamic:()=>d});var n=t(49303),i=t(88716),o=t(60670),u=t(87070),a=t(90455),c=t(53524),l=t(67636),p=t(69206);let d="force-dynamic";async function f(e){try{let r=await (0,a.Sk)(e);if(!r)return u.NextResponse.json({error:"Unauthorized"},{status:401});let{plan:t,returnUrl:s}=await e.json();if(!t||!Object.values(c.SubscriptionPlan).includes(t))return u.NextResponse.json({error:"Invalid plan"},{status:400});if(t===c.SubscriptionPlan.FREE)return u.NextResponse.json({error:"Cannot upgrade to FREE plan"},{status:400});let{subscription:n}=await (0,l.rE)(r.id),i=await (0,l.Cy)(r.id,r.email,`${r.firstName} ${r.lastName}`),o=p.rg[t];if(!o)return u.NextResponse.json({error:"Invalid subscription plan"},{status:400});let d=new URL(e.url).origin,f=s||`${d}/dashboard/subscription?success=true`,g=s||`${d}/dashboard/subscription?canceled=true`;if(n?.stripeSubscriptionId)try{let e=await (0,p.Mg)(n.stripeSubscriptionId,o);return await (0,l.tw)(r.id,t,e.id),u.NextResponse.json({success:!0,message:"Subscription updated successfully",subscription:e})}catch(e){console.error("Error updating existing subscription:",e)}let D=await (0,p.Mc)(i,o,f,g,{userId:r.id,targetPlan:t});return u.NextResponse.json({checkoutUrl:D.url,sessionId:D.id})}catch(e){return console.error("Upgrade subscription error:",e),u.NextResponse.json({error:"Failed to upgrade subscription"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/subscriptions/upgrade/route",pathname:"/api/subscriptions/upgrade",filename:"route",bundlePath:"app/api/subscriptions/upgrade/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/subscriptions/upgrade/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:D,staticGenerationAsyncStorage:m,serverHooks:x}=g,h="/api/subscriptions/upgrade/route";function b(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}},90455:(e,r,t)=>{t.d(r,{Gg:()=>f,Gv:()=>p,Sk:()=>D,c_:()=>l,ed:()=>d,mk:()=>g});var s=t(42023),n=t.n(s),i=t(41482),o=t.n(i),u=t(71615),a=t(9487);let c=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function l(e){return n().hash(e,12)}async function p(e,r){return n().compare(e,r)}async function d(e){var r;let t=(r={userId:e},o().sign(r,c,{expiresIn:"7d"})),s=new Date;return s.setDate(s.getDate()+7),await a._.userSession.create({data:{userId:e,token:t,expiresAt:s}}),t}async function f(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,u.cookies)(),r=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",r?`Token found (${r.substring(0,20)}...)`:"No token found"),!r)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let t=await a._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),t.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await a._.userSession.delete({where:{id:t.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",t.user.email),{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function g(e){let r=await f();if(!r)throw Error("Authentication required");if(!r.isActive)throw Error("Account is inactive");if(e&&!e.includes(r.role))throw Error("Insufficient permissions");return r}async function D(e){try{let r=e.cookies.get("auth-token")?.value;if(!r)return null;let t=await a._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return null;if(t.expiresAt<new Date)return await a._.userSession.delete({where:{id:t.id}}),null;if(!t.user.isActive)return null;return{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972,3954,1059,7636],()=>t(89847));module.exports=s})();