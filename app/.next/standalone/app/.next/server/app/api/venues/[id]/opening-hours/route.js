"use strict";(()=>{var e={};e.id=6236,e.ids=[6236],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84585:(e,r,n)=>{n.r(r),n.d(r,{originalPathname:()=>z,patchFetch:()=>h,requestAsyncStorage:()=>D,routeModule:()=>f,serverHooks:()=>v,staticGenerationAsyncStorage:()=>y});var i={};n.r(i),n.d(i,{GET:()=>m,POST:()=>p,PUT:()=>g,dynamic:()=>c});var t=n(49303),s=n(88716),o=n(60670),a=n(87070),u=n(9487),l=n(90455),d=n(30971);let c="force-dynamic";async function m(e,{params:r}){try{let e=await (0,l.mk)(),n=await u._.venue.findUnique({where:{id:r.id},include:{openingHours:{where:{isActive:!0},orderBy:[{dayOfWeek:"asc"},{openTime:"asc"}]}}});if(!n||n.ownerId!==e.id&&"SUPER_ADMIN"!==e.role&&!n.isActive)return a.NextResponse.json({error:"Venue not found"},{status:404});return a.NextResponse.json({openingHours:n.openingHours})}catch(e){return console.error("Get venue opening hours error:",e),a.NextResponse.json({error:"Failed to fetch venue opening hours"},{status:500})}}async function p(e,{params:r}){try{let n,i;console.log("\uD83D\uDD35 [OPENING_HOURS_API] POST request received for venue:",r.id);let t=await (0,l.mk)();console.log("\uD83D\uDD35 [OPENING_HOURS_API] User authenticated:",t.id);try{n=await e.json(),console.log("\uD83D\uDD35 [OPENING_HOURS_API] Request body:",n)}catch(e){return console.error("\uD83D\uDD34 [OPENING_HOURS_API] JSON parse error:",e),a.NextResponse.json({error:"Invalid JSON format in request body"},{status:400})}try{i=d.sY.parse(n),console.log("\uD83D\uDD35 [OPENING_HOURS_API] Data validated successfully:",i)}catch(e){return console.error("\uD83D\uDD34 [OPENING_HOURS_API] Validation error:",e),a.NextResponse.json({error:"Invalid opening hours data format",details:e},{status:400})}let{openingHours:s}=i;if(!await u._.venue.findUnique({where:{id:r.id,ownerId:t.id}}))return console.error("\uD83D\uDD34 [OPENING_HOURS_API] Venue not found or access denied for user:",t.id,"venue:",r.id),a.NextResponse.json({error:"Venue not found or access denied"},{status:404});let o=s.reduce((e,r)=>(e[r.dayOfWeek]||(e[r.dayOfWeek]=[]),e[r.dayOfWeek].push(r),e),{});for(let[e,r]of Object.entries(o)){let n=r.sort((e,r)=>e.openTime.localeCompare(r.openTime));for(let r=0;r<n.length-1;r++){let i=n[r],t=n[r+1];if(i.closeTime>t.openTime)return a.NextResponse.json({error:`Overlapping time slots on ${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][parseInt(e)]}`},{status:400})}}await u._.venueOpeningHours.deleteMany({where:{venueId:r.id}}),await u._.venueOpeningHours.createMany({data:s.map(e=>({venueId:r.id,dayOfWeek:e.dayOfWeek,openTime:e.openTime,closeTime:e.closeTime,name:e.name||null,isActive:e.isActive}))});let c=await u._.venueOpeningHours.findMany({where:{venueId:r.id},orderBy:[{dayOfWeek:"asc"},{openTime:"asc"}]});return a.NextResponse.json({openingHours:c,message:"Opening hours updated successfully"})}catch(e){if(console.error("\uD83D\uDD34 [OPENING_HOURS_API] Create venue opening hours error:",e),"ZodError"===e.name)return a.NextResponse.json({error:"Invalid opening hours data format",details:e.errors},{status:400});if("Authentication required"===e.message)return a.NextResponse.json({error:"Authentication required"},{status:401});if("P2002"===e.code)return a.NextResponse.json({error:"Duplicate opening hours entry"},{status:409});return a.NextResponse.json({error:"Failed to update venue opening hours",details:e.message},{status:500})}}async function g(e,{params:r}){return p(e,{params:r})}let f=new t.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/venues/[id]/opening-hours/route",pathname:"/api/venues/[id]/opening-hours",filename:"route",bundlePath:"app/api/venues/[id]/opening-hours/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/venues/[id]/opening-hours/route.ts",nextConfigOutput:"standalone",userland:i}),{requestAsyncStorage:D,staticGenerationAsyncStorage:y,serverHooks:v}=f,z="/api/venues/[id]/opening-hours/route";function h(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:y})}},90455:(e,r,n)=>{n.d(r,{Gg:()=>p,Gv:()=>c,Sk:()=>f,c_:()=>d,ed:()=>m,mk:()=>g});var i=n(42023),t=n.n(i),s=n(41482),o=n.n(s),a=n(71615),u=n(9487);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function d(e){return t().hash(e,12)}async function c(e,r){return t().compare(e,r)}async function m(e){var r;let n=(r={userId:e},o().sign(r,l,{expiresIn:"7d"})),i=new Date;return i.setDate(i.getDate()+7),await u._.userSession.create({data:{userId:e,token:n,expiresAt:i}}),n}async function p(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,a.cookies)(),r=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",r?`Token found (${r.substring(0,20)}...)`:"No token found"),!r)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let n=await u._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!n)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),n.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u._.userSession.delete({where:{id:n.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",n.user.email),{id:n.user.id,email:n.user.email,firstName:n.user.firstName,lastName:n.user.lastName,role:n.user.role,isActive:n.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function g(e){let r=await p();if(!r)throw Error("Authentication required");if(!r.isActive)throw Error("Account is inactive");if(e&&!e.includes(r.role))throw Error("Insufficient permissions");return r}async function f(e){try{let r=e.cookies.get("auth-token")?.value;if(!r)return null;let n=await u._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!n)return null;if(n.expiresAt<new Date)return await u._.userSession.delete({where:{id:n.id}}),null;if(!n.user.isActive)return null;return{id:n.user.id,email:n.user.email,firstName:n.user.firstName,lastName:n.user.lastName,role:n.user.role,isActive:n.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,r,n)=>{n.d(r,{_:()=>t});var i=n(53524);let t=globalThis.prisma??new i.PrismaClient},30971:(e,r,n)=>{n.d(r,{Tu:()=>a,WV:()=>l,Yy:()=>u,dm:()=>s,gY:()=>o,i6:()=>d,sY:()=>m,tw:()=>p});var i=n(7410),t=n(53524);let s=i.z.object({email:i.z.string().email("Invalid email address"),password:i.z.string().min(6,"Password must be at least 6 characters")}),o=i.z.object({email:i.z.string().email("Invalid email address"),password:i.z.string().min(6,"Password must be at least 6 characters"),firstName:i.z.string().min(1,"First name is required"),lastName:i.z.string().min(1,"Last name is required"),phone:i.z.string().optional()}),a=i.z.object({name:i.z.string().min(1,"Venue name is required"),description:i.z.string().optional(),address:i.z.string().min(1,"Address is required"),city:i.z.string().min(1,"City is required"),postcode:i.z.string().min(1,"Postcode is required"),phone:i.z.string().min(1,"Phone is required"),email:i.z.string().email("Invalid email address"),website:i.z.string().url().optional().or(i.z.literal("")),cuisine:i.z.string().optional(),venueType:i.z.nativeEnum(t.VenueType),capacity:i.z.number().min(1,"Capacity must be at least 1")}),u=i.z.object({venueId:i.z.string().min(1,"Venue is required"),serviceType:i.z.nativeEnum(t.ServiceType),date:i.z.string().min(1,"Date is required"),time:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),partySize:i.z.number().min(1,"Party size must be at least 1"),customerName:i.z.string().min(1,"Customer name is required"),customerEmail:i.z.string().email("Invalid email address"),customerPhone:i.z.string().min(1,"Phone number is required"),specialRequests:i.z.string().optional(),tableId:i.z.string().optional()}),l=i.z.object({name:i.z.string().min(1,"Table name is required"),capacity:i.z.number().min(1,"Capacity must be at least 1"),description:i.z.string().optional()});i.z.object({name:i.z.string().min(1,"Event name is required"),description:i.z.string().optional(),date:i.z.string().min(1,"Date is required"),startTime:i.z.string().min(1,"Start time is required"),endTime:i.z.string().min(1,"End time is required"),capacity:i.z.number().min(1,"Capacity must be at least 1"),price:i.z.number().min(0,"Price must be positive").optional()});let d=i.z.object({dayOfWeek:i.z.number().min(0).max(6),openTime:i.z.string().min(1,"Open time is required"),closeTime:i.z.string().min(1,"Close time is required"),isOpen:i.z.boolean()}),c=i.z.object({dayOfWeek:i.z.number().min(0).max(6),openTime:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),closeTime:i.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format"),name:i.z.string().optional(),isActive:i.z.boolean().default(!0)}),m=i.z.object({openingHours:i.z.array(c)}),p=i.z.object({name:i.z.string().min(1,"Widget name is required"),settings:i.z.object({theme:i.z.string().optional(),primaryColor:i.z.string().optional(),showLogo:i.z.boolean().optional(),allowedServices:i.z.array(i.z.nativeEnum(t.ServiceType)).optional()}).optional()})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var n=e=>r(r.s=e),i=r.X(0,[9276,5972,3954,7410],()=>n(84585));module.exports=i})();