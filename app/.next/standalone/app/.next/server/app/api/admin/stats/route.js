"use strict";(()=>{var e={};e.id=6553,e.ids=[6553],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},90739:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>A,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>f});var s={};r.r(s),r.d(s,{GET:()=>D,dynamic:()=>d});var n=r(49303),i=r(88716),o=r(60670),a=r(87070),u=r(9487),c=r(90455),l=r(53524);let d="force-dynamic";async function D(e){try{let e=await (0,c.mk)([l.UserRole.SUPER_ADMIN]);console.log("\uD83D\uDD35 [ADMIN-STATS] Fetching admin statistics for user:",e.email);let[t,r,s,n,i,o]=await Promise.all([u._.user.count(),u._.venue.count(),u._.booking.count(),u._.subscription.count({where:{status:"ACTIVE"}}),u._.booking.findMany({take:5,orderBy:{createdAt:"desc"},include:{venue:{select:{name:!0}}}}),u._.user.findMany({take:5,orderBy:{createdAt:"desc"},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,createdAt:!0}})]),d=[];try{let e=new Date;e.setDate(e.getDate()-30),d=await u._.booking.groupBy({by:["createdAt"],where:{createdAt:{gte:e}},_count:{id:!0}})}catch(e){console.error("\uD83D\uDD34 [ADMIN-STATS] Error fetching booking trends:",e),d=[]}let D={stats:{totalUsers:t,totalVenues:r,totalBookings:s,activeSubscriptions:n},recentBookings:i,recentUsers:o,bookingTrends:d};return console.log("\uD83D\uDFE2 [ADMIN-STATS] Successfully fetched admin statistics"),a.NextResponse.json(D)}catch(e){if(console.error("\uD83D\uDD34 [ADMIN-STATS] Error fetching admin statistics:",e),"Authentication required"===e.message)return a.NextResponse.json({error:"Authentication required"},{status:401});if("Insufficient permissions"===e.message)return a.NextResponse.json({error:"Insufficient permissions. Super admin access required."},{status:403});if("Account is inactive"===e.message)return a.NextResponse.json({error:"Account is inactive"},{status:403});if(e.code&&e.code.startsWith("P"))return console.error("\uD83D\uDD34 [ADMIN-STATS] Database error:",e.code,e.message),a.NextResponse.json({error:"Database error occurred while fetching statistics"},{status:500});return a.NextResponse.json({error:"Failed to fetch admin statistics"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/admin/stats/route",pathname:"/api/admin/stats",filename:"route",bundlePath:"app/api/admin/stats/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/admin/stats/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:g}=p,A="/api/admin/stats/route";function h(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:f})}},90455:(e,t,r)=>{r.d(t,{Gg:()=>p,Gv:()=>d,Sk:()=>f,c_:()=>l,ed:()=>D,mk:()=>m});var s=r(42023),n=r.n(s),i=r(41482),o=r.n(i),a=r(71615),u=r(9487);let c=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function l(e){return n().hash(e,12)}async function d(e,t){return n().compare(e,t)}async function D(e){var t;let r=(t={userId:e},o().sign(t,c,{expiresIn:"7d"})),s=new Date;return s.setDate(s.getDate()+7),await u._.userSession.create({data:{userId:e,token:r,expiresAt:s}}),r}async function p(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,a.cookies)(),t=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",t?`Token found (${t.substring(0,20)}...)`:"No token found"),!t)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let r=await u._.userSession.findUnique({where:{token:t},include:{user:!0}});if(!r)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),r.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u._.userSession.delete({where:{id:r.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",r.user.email),{id:r.user.id,email:r.user.email,firstName:r.user.firstName,lastName:r.user.lastName,role:r.user.role,isActive:r.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function m(e){let t=await p();if(!t)throw Error("Authentication required");if(!t.isActive)throw Error("Account is inactive");if(e&&!e.includes(t.role))throw Error("Insufficient permissions");return t}async function f(e){try{let t=e.cookies.get("auth-token")?.value;if(!t)return null;let r=await u._.userSession.findUnique({where:{token:t},include:{user:!0}});if(!r)return null;if(r.expiresAt<new Date)return await u._.userSession.delete({where:{id:r.id}}),null;if(!r.user.isActive)return null;return{id:r.user.id,email:r.user.email,firstName:r.user.firstName,lastName:r.user.lastName,role:r.user.role,isActive:r.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,t,r)=>{r.d(t,{_:()=>n});var s=r(53524);let n=globalThis.prisma??new s.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972,3954],()=>r(90739));module.exports=s})();