"use strict";(()=>{var e={};e.id=1317,e.ids=[1317],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},10687:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>A,requestAsyncStorage:()=>D,routeModule:()=>m,serverHooks:()=>x,staticGenerationAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{DELETE:()=>f,GET:()=>p,dynamic:()=>d});var n=t(49303),o=t(88716),i=t(60670),u=t(87070),a=t(9487),l=t(90455),c=t(53524);let d="force-dynamic";async function p(e,{params:r}){try{await (0,l.mk)([c.UserRole.SUPER_ADMIN]);let{id:e}=r,t=await a._.user.findUnique({where:{id:e},select:{id:!0,email:!0,firstName:!0,lastName:!0,phone:!0,role:!0,isActive:!0,emailVerified:!0,createdAt:!0,updatedAt:!0,_count:{select:{venues:!0,bookings:!0,notifications:!0}},venues:{select:{id:!0,name:!0,slug:!0,isActive:!0,createdAt:!0}},bookings:{take:10,orderBy:{createdAt:"desc"},select:{id:!0,date:!0,status:!0,venue:{select:{name:!0}}}}}});if(!t)return u.NextResponse.json({error:"User not found"},{status:404});return u.NextResponse.json({user:t})}catch(e){return console.error("Get user error:",e),u.NextResponse.json({error:"Failed to fetch user"},{status:500})}}async function f(e,{params:r}){try{await (0,l.mk)([c.UserRole.SUPER_ADMIN]);let{id:e}=r,t=await a._.user.findUnique({where:{id:e}});if(!t)return u.NextResponse.json({error:"User not found"},{status:404});if(t.role===c.UserRole.SUPER_ADMIN)return u.NextResponse.json({error:"Cannot delete super admin users"},{status:403});return await a._.user.delete({where:{id:e}}),u.NextResponse.json({message:"User deleted successfully"})}catch(e){return console.error("Delete user error:",e),u.NextResponse.json({error:"Failed to delete user"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/users/[id]/route",pathname:"/api/admin/users/[id]",filename:"route",bundlePath:"app/api/admin/users/[id]/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/admin/users/[id]/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:D,staticGenerationAsyncStorage:g,serverHooks:x}=m,h="/api/admin/users/[id]/route";function A(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:g})}},90455:(e,r,t)=>{t.d(r,{Gg:()=>f,Gv:()=>d,Sk:()=>D,c_:()=>c,ed:()=>p,mk:()=>m});var s=t(42023),n=t.n(s),o=t(41482),i=t.n(o),u=t(71615),a=t(9487);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function c(e){return n().hash(e,12)}async function d(e,r){return n().compare(e,r)}async function p(e){var r;let t=(r={userId:e},i().sign(r,l,{expiresIn:"7d"})),s=new Date;return s.setDate(s.getDate()+7),await a._.userSession.create({data:{userId:e,token:t,expiresAt:s}}),t}async function f(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,u.cookies)(),r=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",r?`Token found (${r.substring(0,20)}...)`:"No token found"),!r)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let t=await a._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),t.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await a._.userSession.delete({where:{id:t.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",t.user.email),{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function m(e){let r=await f();if(!r)throw Error("Authentication required");if(!r.isActive)throw Error("Account is inactive");if(e&&!e.includes(r.role))throw Error("Insufficient permissions");return r}async function D(e){try{let r=e.cookies.get("auth-token")?.value;if(!r)return null;let t=await a._.userSession.findUnique({where:{token:r},include:{user:!0}});if(!t)return null;if(t.expiresAt<new Date)return await a._.userSession.delete({where:{id:t.id}}),null;if(!t.user.isActive)return null;return{id:t.user.id,email:t.user.email,firstName:t.user.firstName,lastName:t.user.lastName,role:t.user.role,isActive:t.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,r,t)=>{t.d(r,{_:()=>n});var s=t(53524);let n=globalThis.prisma??new s.PrismaClient}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972,3954],()=>t(10687));module.exports=s})();