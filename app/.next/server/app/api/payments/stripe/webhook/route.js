"use strict";(()=>{var e={};e.id=6048,e.ids=[6048],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},80423:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>w,patchFetch:()=>b,requestAsyncStorage:()=>h,routeModule:()=>y,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g});var n={};a.r(n),a.d(n,{POST:()=>c,dynamic:()=>u});var r=a(49303),o=a(88716),i=a(60670),s=a(87070),d=a(9487),p=a(53524);let u="force-dynamic";async function c(e){try{let t=await e.text();e.headers.get("stripe-signature");let a=JSON.parse(t);switch(a.type){case"payment_intent.succeeded":await l(a.data.object);break;case"payment_intent.payment_failed":await m(a.data.object);break;default:console.log(`Unhandled event type: ${a.type}`)}return s.NextResponse.json({received:!0})}catch(e){return console.error("Webhook error:",e),s.NextResponse.json({error:"Webhook handler failed"},{status:400})}}async function l(e){try{let t=await d._.payment.findFirst({where:{providerPaymentId:e.id},include:{booking:{include:{venue:!0}}}});if(!t){console.error("Payment not found for payment intent:",e.id);return}await d._.payment.update({where:{id:t.id},data:{status:p.PaymentStatus.COMPLETED,metadata:{...t.metadata||{},paymentIntentStatus:e.status,completedAt:new Date().toISOString()}}}),await d._.booking.update({where:{id:t.bookingId},data:{isPaid:!0,status:"CONFIRMED"}}),console.log(`Payment succeeded for booking ${t.bookingId}`)}catch(e){console.error("Error handling payment succeeded:",e)}}async function m(e){try{let t=await d._.payment.findFirst({where:{providerPaymentId:e.id}});if(!t){console.error("Payment not found for payment intent:",e.id);return}await d._.payment.update({where:{id:t.id},data:{status:p.PaymentStatus.FAILED,metadata:{...t.metadata||{},paymentIntentStatus:e.status,failedAt:new Date().toISOString(),failureReason:e.last_payment_error?.message}}}),console.log(`Payment failed for booking ${t.bookingId}`)}catch(e){console.error("Error handling payment failed:",e)}}let y=new r.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/payments/stripe/webhook/route",pathname:"/api/payments/stripe/webhook",filename:"route",bundlePath:"app/api/payments/stripe/webhook/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/payments/stripe/webhook/route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:h,staticGenerationAsyncStorage:g,serverHooks:f}=y,w="/api/payments/stripe/webhook/route";function b(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}},9487:(e,t,a)=>{a.d(t,{_:()=>r});var n=a(53524);let r=globalThis.prisma??new n.PrismaClient}};var t=require("../../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),n=t.X(0,[9276,5972],()=>a(80423));module.exports=n})();