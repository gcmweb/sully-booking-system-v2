"use strict";(()=>{var e={};e.id=1241,e.ids=[1241],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},42357:(e,n,r)=>{r.r(n),r.d(n,{originalPathname:()=>P,patchFetch:()=>w,requestAsyncStorage:()=>y,routeModule:()=>m,serverHooks:()=>b,staticGenerationAsyncStorage:()=>v});var t={};r.r(t),r.d(t,{GET:()=>c,POST:()=>d,PUT:()=>g,dynamic:()=>p});var s=r(49303),a=r(88716),i=r(60670),o=r(87070),u=r(9487),l=r(86287);let p="force-dynamic";async function c(e,{params:n}){try{let e=n.id,r=await u._.venue.findUnique({where:{id:e},include:{images:{where:{isActive:!0},orderBy:{displayOrder:"asc"}}}});if(!r)return o.NextResponse.json({error:"Venue not found"},{status:404});return o.NextResponse.json({success:!0,images:r.images})}catch(e){return console.error("Error fetching venue images:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function d(e,{params:n}){try{let r=n.id,{url:t,alt:s,type:a,displayOrder:i}=await e.json();if(!t||!a)return o.NextResponse.json({error:"URL and type are required"},{status:400});if(!await u._.venue.findUnique({where:{id:r}}))return o.NextResponse.json({error:"Venue not found"},{status:404});let p=await (0,l.sN)(r);if(!p.canUploadGallery)return o.NextResponse.json({error:"Gallery uploads not available on your current plan"},{status:403});if(await u._.venueImage.count({where:{venueId:r,isActive:!0}})>=p.maxGalleryImages)return o.NextResponse.json({error:`Maximum of ${p.maxGalleryImages} images allowed on your plan`},{status:403});let c=await u._.venueImage.create({data:{venueId:r,url:t,alt:s||"",type:a,displayOrder:i||0}});return o.NextResponse.json({success:!0,image:c})}catch(e){return console.error("Error uploading venue image:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e,{params:n}){try{let r=n.id,{images:t}=await e.json();if(!Array.isArray(t))return o.NextResponse.json({error:"Images array is required"},{status:400});let s=t.map((e,n)=>u._.venueImage.update({where:{id:e.id,venueId:r},data:{displayOrder:n}}));return await Promise.all(s),o.NextResponse.json({success:!0,message:"Image order updated successfully"})}catch(e){return console.error("Error updating image order:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/venues/[id]/images/route",pathname:"/api/venues/[id]/images",filename:"route",bundlePath:"app/api/venues/[id]/images/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/venues/[id]/images/route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:y,staticGenerationAsyncStorage:v,serverHooks:b}=m,P="/api/venues/[id]/images/route";function w(){return(0,i.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:v})}},9487:(e,n,r)=>{r.d(n,{_:()=>s});var t=r(53524);let s=globalThis.prisma??new t.PrismaClient},86287:(e,n,r)=>{r.d(n,{EG:()=>l,GC:()=>o,XA:()=>a,ol:()=>p,sN:()=>i});var t=r(9487),s=r(53524);async function a(e){let n=await t._.subscription.findUnique({where:{venueId:e}});return n?{canCreateBooking:n.plan===s.SubscriptionPlan.PAID||n.plan===s.SubscriptionPlan.PREMIUM||null!==n.bookingsLimit&&n.bookingsUsed<n.bookingsLimit,bookingsUsed:n.bookingsUsed,bookingsLimit:n.bookingsLimit,plan:n.plan}:(await t._.subscription.create({data:{venueId:e,plan:s.SubscriptionPlan.FREE,status:s.SubscriptionStatus.ACTIVE,currentPeriodStart:new Date,currentPeriodEnd:new Date(Date.now()+2592e6),bookingsLimit:50}}),{canCreateBooking:!0,bookingsUsed:0,bookingsLimit:50,plan:s.SubscriptionPlan.FREE})}async function i(e){let n=await t._.subscription.findUnique({where:{venueId:e}}),r=n?.plan||s.SubscriptionPlan.FREE;return{canUploadLogo:!0,canUploadHeader:!0,canUploadGallery:r===s.SubscriptionPlan.PREMIUM||r===s.SubscriptionPlan.PAID,maxGalleryImages:r===s.SubscriptionPlan.PREMIUM||r===s.SubscriptionPlan.PAID?20:0,plan:r}}async function o(e){await t._.subscription.update({where:{venueId:e},data:{bookingsUsed:{increment:1}}})}let u={FREE:{venues:1,bookingsPerMonth:50,galleryImages:0,analytics:!0,widgets:!0,customBranding:!1,prioritySupport:!1},PAID:{venues:5,bookingsPerMonth:null,galleryImages:20,analytics:!0,widgets:!0,customBranding:!0,prioritySupport:!1},PREMIUM:{venues:null,bookingsPerMonth:null,galleryImages:20,analytics:!0,widgets:!0,customBranding:!0,prioritySupport:!0}};async function l(e){let n;let r=await t._.venue.count({where:{ownerId:e}}),a=await t._.venue.findMany({where:{ownerId:e},include:{subscription:!0}}),i=s.SubscriptionPlan.FREE;for(let e of a)if(e.subscription){if(e.subscription.plan===s.SubscriptionPlan.PREMIUM){i=s.SubscriptionPlan.PREMIUM;break}e.subscription.plan===s.SubscriptionPlan.PAID&&i===s.SubscriptionPlan.FREE&&(i=s.SubscriptionPlan.PAID)}let o=u[i],l=null===o.venues||r<o.venues;return l||(n=`You've reached the venue limit for your ${i} plan (${o.venues} venue${1===o.venues?"":"s"}). Upgrade to create more venues.`),{canCreateVenue:l,venuesUsed:r,venuesLimit:o.venues,plan:i,message:n}}async function p(e){let n=await l(e),r=u[n.plan];return{plan:n.plan,venues:{used:n.venuesUsed,limit:n.venuesLimit},features:{bookingsPerMonth:r.bookingsPerMonth,galleryImages:r.galleryImages,analytics:r.analytics,widgets:r.widgets,customBranding:r.customBranding,prioritySupport:r.prioritySupport}}}}};var n=require("../../../../../webpack-runtime.js");n.C(e);var r=e=>n(n.s=e),t=n.X(0,[9276,5972],()=>r(42357));module.exports=t})();