"use strict";(()=>{var e={};e.id=7132,e.ids=[7132],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},88984:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>b,patchFetch:()=>v,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>k,staticGenerationAsyncStorage:()=>y});var n={};o.r(n),o.d(n,{GET:()=>d,dynamic:()=>g});var a=o(49303),r=o(88716),s=o(60670),i=o(87070),u=o(9487),l=o(90455),c=o(53524);let g="force-dynamic";async function d(e,{params:t}){try{let o=await (0,l.mk)(),n=t.id,{searchParams:a}=new URL(e.url),r=parseInt(a.get("timeRange")||"30"),s=await u._.venue.findUnique({where:{id:n},include:{owner:!0}});if(!s)return i.NextResponse.json({error:"Venue not found"},{status:404});if(o.role!==c.UserRole.SUPER_ADMIN&&s.ownerId!==o.id)return i.NextResponse.json({error:"Access denied"},{status:403});let g=new Date,d=new Date;d.setDate(d.getDate()-r);let m={venueId:n,createdAt:{gte:d,lte:g}},p=await u._.booking.count({where:m}),y=await u._.payment.aggregate({where:{booking:m,status:"COMPLETED"},_sum:{amount:!0}}),k=Number(y._sum.amount||0),b=await u._.booking.aggregate({where:m,_avg:{partySize:!0}}),v=Number(b._avg.partySize||0),D=(await u._.booking.findMany({where:m,include:{payments:{where:{status:"COMPLETED"}}},orderBy:{date:"asc"}})).reduce((e,t)=>{let o=t.date.toISOString().split("T")[0];return e[o]||(e[o]={date:o,bookings:0,revenue:0,totalPartySize:0,count:0}),e[o].bookings+=1,e[o].revenue+=t.payments.reduce((e,t)=>e+Number(t.amount),0),e[o].totalPartySize+=t.partySize,e[o].count+=1,e},{}),w=Object.values(D).map(e=>({date:e.date,bookings:e.bookings,revenue:e.revenue,avgPartySize:e.count>0?e.totalPartySize/e.count:0})),h=(await u._.booking.groupBy({by:["serviceType"],where:m,_count:{serviceType:!0},_sum:{partySize:!0}})).map(e=>({type:e.serviceType,count:e._count.serviceType,totalGuests:e._sum.partySize||0,percentage:e._count.serviceType/p*100})),f=(await u._.booking.findMany({where:m,select:{time:!0,partySize:!0}})).reduce((e,t)=>{let o=t.time.split(":")[0];return e[o]||(e[o]={hour:`${o}:00`,bookings:0,totalPartySize:0,count:0}),e[o].bookings+=1,e[o].totalPartySize+=t.partySize,e[o].count+=1,e},{}),S=Object.values(f).map(e=>({hour:e.hour,bookings:e.bookings,avgPartySize:e.count>0?e.totalPartySize/e.count:0})).sort((e,t)=>t.bookings-e.bookings),_=(await u._.booking.groupBy({by:["status"],where:m,_count:{status:!0}})).map(e=>({status:e.status,count:e._count.status,percentage:e._count.status/p*100})),A=(await u._.table.findMany({where:{venueId:n},include:{bookings:{where:{createdAt:{gte:d,lte:g}}}}})).map(e=>{let t=e.bookings.length,o=t>0?e.bookings.reduce((e,t)=>e+t.partySize,0)/t:0,n=e.capacity>0?o/e.capacity*100:0;return{tableName:e.name,capacity:e.capacity,bookings:t,avgPartySize:o,utilizationRate:n}}).sort((e,t)=>t.bookings-e.bookings),x=(await u._.booking.findMany({where:m,select:{customerEmail:!0,customerName:!0,partySize:!0,createdAt:!0}})).reduce((e,t)=>{let o=t.customerEmail;return e[o]||(e[o]={email:o,name:t.customerName,totalBookings:0,totalGuests:0,lastBooking:t.createdAt}),e[o].totalBookings+=1,e[o].totalGuests+=t.partySize,t.createdAt>e[o].lastBooking&&(e[o].lastBooking=t.createdAt),e},{}),T=Object.values(x).filter(e=>e.totalBookings>1).map(e=>({email:e.email,name:e.name,totalBookings:e.totalBookings,totalGuests:e.totalGuests,avgPartySize:e.totalGuests/e.totalBookings,lastBooking:e.lastBooking.toLocaleDateString()})).sort((e,t)=>t.totalBookings-e.totalBookings).slice(0,10),N=new Date;N.setDate(1);let z=new Date(N);z.setMonth(z.getMonth()-1);let P=new Date(N);P.setDate(P.getDate()-1);let B=await u._.booking.count({where:{venueId:n,createdAt:{gte:N}}}),I=await u._.booking.count({where:{venueId:n,createdAt:{gte:z,lte:P}}}),E=await u._.payment.aggregate({where:{booking:{venueId:n,createdAt:{gte:N}},status:"COMPLETED"},_sum:{amount:!0}}),M=await u._.payment.aggregate({where:{booking:{venueId:n,createdAt:{gte:z,lte:P}},status:"COMPLETED"},_sum:{amount:!0}}),L=Number(M._sum.amount||0)>0?(Number(E._sum.amount||0)-Number(M._sum.amount||0))/Number(M._sum.amount||0)*100:0,q={currentMonth:{bookings:B,revenue:Number(E._sum.amount||0)},previousMonth:{bookings:I,revenue:Number(M._sum.amount||0)},growth:{bookings:Math.round(I>0?(B-I)/I*100:0),revenue:Math.round(L)}},U=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],j=(await u._.booking.findMany({where:m,select:{date:!0,partySize:!0}})).reduce((e,t)=>{let o=t.date.getDay();return e[o]||(e[o]={day:U[o],bookings:0,totalPartySize:0,count:0}),e[o].bookings+=1,e[o].totalPartySize+=t.partySize,e[o].count+=1,e},{}),R=Object.values(j).map(e=>({day:e.day,bookings:e.bookings,avgPartySize:e.count>0?e.totalPartySize/e.count:0})).sort((e,t)=>t.bookings-e.bookings);return i.NextResponse.json({venue:{id:s.id,name:s.name,venueType:s.venueType},totalBookings:p,totalRevenue:k,averagePartySize:v,bookingTrends:w.map(e=>({date:new Date(e.date).toLocaleDateString(),bookings:e.bookings,revenue:e.revenue,avgPartySize:e.avgPartySize})),serviceTypeBreakdown:h,statusBreakdown:_,peakHours:S,tableUtilization:A,customerInsights:T,busiestDays:R,monthlyComparison:q})}catch(e){return console.error("Venue analytics error:",e),i.NextResponse.json({error:"Failed to fetch venue analytics"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/venues/[id]/analytics/route",pathname:"/api/venues/[id]/analytics",filename:"route",bundlePath:"app/api/venues/[id]/analytics/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system/app/app/api/venues/[id]/analytics/route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:y,serverHooks:k}=m,b="/api/venues/[id]/analytics/route";function v(){return(0,s.patchFetch)({serverHooks:k,staticGenerationAsyncStorage:y})}},90455:(e,t,o)=>{o.d(t,{Gg:()=>m,Gv:()=>g,Sk:()=>y,c_:()=>c,ed:()=>d,mk:()=>p});var n=o(42023),a=o.n(n),r=o(41482),s=o.n(r),i=o(71615),u=o(9487);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function c(e){return a().hash(e,12)}async function g(e,t){return a().compare(e,t)}async function d(e){var t;let o=(t={userId:e},s().sign(t,l,{expiresIn:"7d"})),n=new Date;return n.setDate(n.getDate()+7),await u._.userSession.create({data:{userId:e,token:o,expiresAt:n}}),o}async function m(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,i.cookies)(),t=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",t?`Token found (${t.substring(0,20)}...)`:"No token found"),!t)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let o=await u._.userSession.findUnique({where:{token:t},include:{user:!0}});if(!o)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),o.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u._.userSession.delete({where:{id:o.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",o.user.email),{id:o.user.id,email:o.user.email,firstName:o.user.firstName,lastName:o.user.lastName,role:o.user.role,isActive:o.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function p(e){let t=await m();if(!t)throw Error("Authentication required");if(!t.isActive)throw Error("Account is inactive");if(e&&!e.includes(t.role))throw Error("Insufficient permissions");return t}async function y(e){try{let t=e.cookies.get("auth-token")?.value;if(!t)return null;let o=await u._.userSession.findUnique({where:{token:t},include:{user:!0}});if(!o)return null;if(o.expiresAt<new Date)return await u._.userSession.delete({where:{id:o.id}}),null;if(!o.user.isActive)return null;return{id:o.user.id,email:o.user.email,firstName:o.user.firstName,lastName:o.user.lastName,role:o.user.role,isActive:o.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},9487:(e,t,o)=>{o.d(t,{_:()=>a});var n=o(53524);let a=globalThis.prisma??new n.PrismaClient}};var t=require("../../../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),n=t.X(0,[9276,5972,3954],()=>o(88984));module.exports=n})();